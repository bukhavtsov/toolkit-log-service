// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendMessagesRequest struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessagesRequest) Reset()         { *m = SendMessagesRequest{} }
func (m *SendMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessagesRequest) ProtoMessage()    {}
func (*SendMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_e7902bf94b334413, []int{0}
}
func (m *SendMessagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessagesRequest.Unmarshal(m, b)
}
func (m *SendMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessagesRequest.Marshal(b, m, deterministic)
}
func (dst *SendMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessagesRequest.Merge(dst, src)
}
func (m *SendMessagesRequest) XXX_Size() int {
	return xxx_messageInfo_SendMessagesRequest.Size(m)
}
func (m *SendMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessagesRequest proto.InternalMessageInfo

func (m *SendMessagesRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SendMessagesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessagesResponse) Reset()         { *m = SendMessagesResponse{} }
func (m *SendMessagesResponse) String() string { return proto.CompactTextString(m) }
func (*SendMessagesResponse) ProtoMessage()    {}
func (*SendMessagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_e7902bf94b334413, []int{1}
}
func (m *SendMessagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessagesResponse.Unmarshal(m, b)
}
func (m *SendMessagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessagesResponse.Marshal(b, m, deterministic)
}
func (dst *SendMessagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessagesResponse.Merge(dst, src)
}
func (m *SendMessagesResponse) XXX_Size() int {
	return xxx_messageInfo_SendMessagesResponse.Size(m)
}
func (m *SendMessagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessagesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SendMessagesRequest)(nil), "service.SendMessagesRequest")
	proto.RegisterType((*SendMessagesResponse)(nil), "service.SendMessagesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ToolkitLogServiceClient is the client API for ToolkitLogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ToolkitLogServiceClient interface {
	SendMessages(ctx context.Context, opts ...grpc.CallOption) (ToolkitLogService_SendMessagesClient, error)
}

type toolkitLogServiceClient struct {
	cc *grpc.ClientConn
}

func NewToolkitLogServiceClient(cc *grpc.ClientConn) ToolkitLogServiceClient {
	return &toolkitLogServiceClient{cc}
}

func (c *toolkitLogServiceClient) SendMessages(ctx context.Context, opts ...grpc.CallOption) (ToolkitLogService_SendMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ToolkitLogService_serviceDesc.Streams[0], "/service.ToolkitLogService/SendMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &toolkitLogServiceSendMessagesClient{stream}
	return x, nil
}

type ToolkitLogService_SendMessagesClient interface {
	Send(*SendMessagesRequest) error
	CloseAndRecv() (*SendMessagesResponse, error)
	grpc.ClientStream
}

type toolkitLogServiceSendMessagesClient struct {
	grpc.ClientStream
}

func (x *toolkitLogServiceSendMessagesClient) Send(m *SendMessagesRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *toolkitLogServiceSendMessagesClient) CloseAndRecv() (*SendMessagesResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendMessagesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ToolkitLogServiceServer is the server API for ToolkitLogService service.
type ToolkitLogServiceServer interface {
	SendMessages(ToolkitLogService_SendMessagesServer) error
}

func RegisterToolkitLogServiceServer(s *grpc.Server, srv ToolkitLogServiceServer) {
	s.RegisterService(&_ToolkitLogService_serviceDesc, srv)
}

func _ToolkitLogService_SendMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ToolkitLogServiceServer).SendMessages(&toolkitLogServiceSendMessagesServer{stream})
}

type ToolkitLogService_SendMessagesServer interface {
	SendAndClose(*SendMessagesResponse) error
	Recv() (*SendMessagesRequest, error)
	grpc.ServerStream
}

type toolkitLogServiceSendMessagesServer struct {
	grpc.ServerStream
}

func (x *toolkitLogServiceSendMessagesServer) SendAndClose(m *SendMessagesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *toolkitLogServiceSendMessagesServer) Recv() (*SendMessagesRequest, error) {
	m := new(SendMessagesRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ToolkitLogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.ToolkitLogService",
	HandlerType: (*ToolkitLogServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendMessages",
			Handler:       _ToolkitLogService_SendMessages_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_e7902bf94b334413) }

var fileDescriptor_service_e7902bf94b334413 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xd4, 0xb9,
	0x84, 0x83, 0x53, 0xf3, 0x52, 0x7c, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x8b, 0x83, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x04, 0xb8, 0x98, 0x73, 0x8b, 0xd3, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x40, 0x4c, 0x25, 0x31, 0x2e, 0x11, 0x54, 0x85, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9,
	0x46, 0x29, 0x5c, 0x82, 0x21, 0xf9, 0xf9, 0x39, 0xd9, 0x99, 0x25, 0x3e, 0xf9, 0xe9, 0xc1, 0x10,
	0x53, 0x85, 0xfc, 0xb9, 0x78, 0x90, 0x15, 0x0b, 0xc9, 0xe8, 0xc1, 0xac, 0xc7, 0x62, 0x99, 0x94,
	0x2c, 0x0e, 0x59, 0x88, 0x0d, 0x4a, 0x0c, 0x1a, 0x8c, 0x49, 0x6c, 0x60, 0x67, 0x1b, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xdb, 0x14, 0xff, 0xf0, 0xc7, 0x00, 0x00, 0x00,
}
